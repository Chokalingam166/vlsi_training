File: tb_mux4to1.v
`timescale 1ns/1ps

module tb_mux4to1;

    // Testbench signals
    reg [3:0] in;
    reg [1:0] sel;
    wire out;

    // Instantiate the design under test (DUT)
    mux4to1 uut (
        .in(in),
        .sel(sel),
        .out(out)
    );

    // Test procedure
    initial begin
        // Display header
        $display("Time\t sel in   -> out");
        $display("----------------------");
        
        // Apply test cases
        in = 4'b1010;  // Example input pattern

        sel = 2'b00; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);
        sel = 2'b01; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);
        sel = 2'b10; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);
        sel = 2'b11; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);

        // Try another input pattern
        in = 4'b1101;
        sel = 2'b00; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);
        sel = 2'b01; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);
        sel = 2'b10; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);
        sel = 2'b11; #10; $display("%0t\t %b  %b -> %b", $time, sel, in, out);

        // End simulation
        $finish;
    end

endmodule
